---
title: Lab2: GNU Toolchain and Git
toc: no
...

預期目標
-------
- 學習 GNU Toolchain 的使用
- 藉由 `coroutine<http://en.wikipedia.org/wiki/Coroutine>`_ 的實做，作為日後 RTOS 學習的準備
- 以 Git 管理與追蹤開發過程

預先準備
-------
- 在本 wiki 註冊帳號
- 在 `GitCafe<https://gitcafe.com>`_ 註冊帳號
  - 確認在 Account Settings 加入 SSH Key
  - 可參考「`產生 SSH key 給 Bitbucket/Github 使用<http://nyllep.wordpress.com/2012/01/21/sshkey-for-bitbucket/>`_」一文

- 注意：若使用公用電腦，可切換到 root 後，建立新的使用者帳號
  - sudo su
  - adduser 指定帳號名稱
  - sudoedit /etc/group
  - 在 /etc/group 確保該帳號已加入 **admin** 群組，如：
    - admin:x:115:ncku,帳戶名稱

- 將註冊的帳號名稱，通知課程主持人或助教，於 `Organization **embedded2012**<https://gitcafe.com/embedded2012>`_ 加入用於紀錄開發動態的 Git repository
  - 範例: `P-jserv<https://gitcafe.com/embedded2012/P-jserv>`_，最好與 wiki 帳號名稱一致，以利於識別
  - 點選 **SSH (Read+Write)** 可得到 git repository 的位址，如上例為

    ``git@gitcafe.com:embedded2012/P-jserv.git``

- 注意：到 2012 年年底前，repository 的存取權限應該設定為 private
- 參閱 `Git 簡易操作</git>`_

Coroutines
----------
- "Coroutines are computer program components that generalize subroutines to allow multiple entry points for suspending and resuming execution at certain locations. Coroutines are well-suited for implementing more familiar program components such as cooperative tasks, iterators, infinite lists and pipes."
  * http://en.wikipedia.org/wiki/Coroutine

- 使用 coroutine 實做 user-level thread
  * http://blog.linux.org.tw/~jserv/archives/001848.html

- Coroutine in FPPA
  * http://godspeedlee.myweb.hinet.net/coroutine.html

- 淺談coroutine與gevent
  * http://blog.ez2learn.com/2010/07/17/talk-about-coroutine-and-gevent/

小提示
-----
- Ubuntu Linux 預設的文字編輯器為 nano，對許多習慣於 vi/vim 的使用者來說，較為不便，可透過以下指令選擇：

    ``sudo update-alternatives --config editor``