---
title: 課程進度與開放資源
categories: system programming, linux, performance, security, compiler, kernel
toc: no
...

- Instructor: [Jim Huang](/User/jserv) (黃敬群) `<jserv.tw@gmail.com>`
    * [Facebook 粉絲專頁](https://www.facebook.com/JservFans) (不要擔心提了笨問題，這就是專門和學生互動的)
- 討論區: [https://www.facebook.com/groups/system.software2016/](https://www.facebook.com/groups/system.software2016/)
- 課程信箱: `<embedded.master2015@gmail.com>`

進階電腦系統理論與實作 (Fall 2016)
------------------------------------------------------
* 第 1 週 (Sep 23): 誠實面對自己：不是這門課程很操，是你過去欺騙了自己
    - [課程簡介和注意須知](https://docs.google.com/presentation/d/15F6sTm9WN6Efc5pjP8HkUVCfNbjqK859-7vYJy81kAc/edit#slide=id.p)
    - [21 世紀的系統軟體](https://hackmd.io/s/r1srX7Za): 「需求」層次: 正確 → 安全 → 可讀 → 優雅 → 利他; Benchmark / Profiling; 運算模式的巨變; Deep Learning 背後的資訊建設: GPU; 軟體品質和安全議題
    - [你所不知道的 C 語言](http://hackfoldr.org/dykc/): 本週進度為「指標篇」和「物件導向程式設計篇」
    - [重新理解數值](https://hackmd.io/s/SkKZBXZT): integer overflow; 邏輯和算術的差異; 運用 bit-wise operator; Count Leading Zero
    - [Programming Small](https://hackmd.io/s/S1rbwmZ6): 在小處下功夫，不放棄整體改善的機會
    - [本學期作業說明](https://hackmd.io/s/B1DmtJfT)
    - [隨堂測驗](https://hackmd.io/s/r13u0Af6)
    - [作業](https://hackmd.io/s/H1B7-hGp) (截止日: Sep 29)
        * [phonebook](https://hackmd.io/s/S1RVdgza), [raytracing](https://hackmd.io/s/B1W5AWza), [compute-pi](https://hackmd.io/s/rJARexQT), [clz](https://hackmd.io/s/B1LHefQ6)
        * [W1-QA](https://hackmd.io/s/Hka2UE8a) (只有選修課程的學生需要完成這項)

* 第 2 週 (Sep 30): 並行 + 演算法分析
    - [concurrency](https://hackmd.io/s/H10MXXoT): Concurrency (並行) vs. Parallelism (平行); POSIX Threads; Thread Pool; Lock-free Thread Pool; 對 Linked-List 排序;  Producer-Consumer Problem
    - [Algorithm Complexity Analysis](http://discrete.gr/complexity/)
    - 作業: (截止日: Oct 6)
        * phonebook-concurrent, mergesort-concurrent, producer-consumer

* 第 3 週 (Oct 7): 重新理解電腦結構
    - [Computer Architecture](http://hackmd.io/s/ryv1NT3S)
    - 作業: (截止日: Oct 13)
        * software pipelining, b+tree

* 第 4 週 (Oct 14): 作業系統概念的實踐
    - Operating System Concepts
    - Computer Network
    - 作業: (截止日: Oct 20)
        * thread-package, facebooc

* 第 5 週 (Oct 21): 編譯器
    - How A Proagram Works
    - Compilers
    - 作業: (截止日: Oct 27)
        * amacc, brainf`*`ck

* 第 6 週 (Oct 28): 你所不知道的記憶體
    - Virtual Memory
    - Memory Allocators
    - 作業: (截止日: Nov 5)
        * malloc-implementation

* 第 7 週 (Nov 4) 數學總複習：線性代數, 離散數學, 機率統計, 工程數學
    - 作業: (截止日: Nov 19)
        * image-processing

* 第 8 週 (Nov 11): Virtual Machines and Secure Coding
    - 作業: (截止日: Nov 26) 
        * rubi, buffer-overflow-attack

* 第 9 週 (Nov 18)
    - [nand2tetris](http://www.slideshare.net/ccckmit/nand2tetris), [Nand2Tetris 課程社團](https://www.facebook.com/groups/nand2tetris/)
    - 作業: (截止日: Dec 17)
        * nand2tetris (強化版)

## Computer Systems: A Programmer's Perspective

*   [CMU 官方網站](http://csapp.cs.cmu.edu/)
*   推薦閱讀: (和本課程高度相關)
    - [Machine-Level Representation of Programs](http://csapp.cs.cmu.edu/2e/ch3-preview.pdf)
    - [Processor Architecture](http://csapp.cs.cmu.edu/2e/ch4-preview.pdf)
    - [Optimizing Program Performance](http://csapp.cs.cmu.edu/2e/ch5-preview.pdf)
    - [The Memory Hierarchy](http://csapp.cs.cmu.edu/2e/ch6-preview.pdf)
    - [Linking](http://csapp.cs.cmu.edu/2e/ch7-preview.pdf)
    - [Exceptional Control Flow](http://csapp.cs.cmu.edu/2e/ch8-preview.pdf)
    - [Virtual Memory](http://csapp.cs.cmu.edu/2e/ch9-preview.pdf)
    - [System-Level I/O](http://csapp.cs.cmu.edu/2e/ch10-preview.pdf)
    - [Concurrent Programming](http://csapp.cs.cmu.edu/2e/ch12-preview.pdf)
*   [Modern Microprocessors A 90 Minute Guide!](http://www.lighterra.com/papers/modernmicroprocessors/) (必讀)